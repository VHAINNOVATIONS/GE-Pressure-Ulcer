<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html  xmlns="http://www.w3.org/1999/xhtml"
      xmlns:tal="http://xml.zope.org/namespaces/tal"	
      xmlns:metal="http://xml.zope.org/namespaces/metal">
<head>

  <!-- START: META DATA -->
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
        <meta http-equiv="CACHE-CONTROL" content="NO-CACHE">
        <meta name="language" content="en">
        <meta name="author" content="General Electric Global Research">
        <meta name="subject" content="Multi-Modality Portable System for Pressure Ulcer Prevention and Care">
  <!-- END: META DATA -->
   
 <title>Multi-Modality Portable System for Pressure Ulcer Prevention and Care</title>


<!-- Import our stylesheet and others required by various library packages -->
<link rel="Stylesheet"href="/static/css/redmond/jquery-ui-1.10.4.custom.css" type="text/css" media="screen"/>
<link rel="stylesheet" type="text/css" href="/static/css/DataTables/demo_table_jui.css">
<link rel="stylesheet" type="text/css" href="/static/css/DataTables/ColVis.css">
<link rel="stylesheet" type="text/css" href="/static/css/DataTables/ColReorder.css">
<link rel="stylesheet" type="text/css" href="/static/css/DataTables/TableTools_JUI.css">

<link href="/static/css/mmpspupc.css" media="all" rel="stylesheet" type="text/css">
<link href="/static/css/template_styles.css" media="all" rel="stylesheet" type="text/css">

<!-- ****************************** LINKS TO JAVASCRIPT CODE FOR PAGES *********************************** -->

<!-- jQuery Library  -->
<script src="/static/js/jquery-2.1.0.js" type="text/javascript"></script>
<script src="/static/js/jquery-ui-1.10.4.custom.js" type="text/javascript" ></script>
<!-- Spinner and loading indicators -->
<script src="/static/js/jquery.spinner.js" type="text/javascript"></script>
<script src="/static/js/script.js" type="text/javascript"></script>
<!-- <script type="text/javascript" src="/va_files/foresee/foresee-trigger.js"></script> -->
<!-- <script type="text/javascript" src="/explore/scripts/exploreva-pixels.js"></script> -->
<!-- Import Datatables functionality scripts -->
<script type="text/javascript" src="/static/js/DataTables/jquery.dataTables.js"></script>
<script type="text/javascript" src="/static/js/DataTables/ColVis.js"></script>
<script type="text/javascript" src="/static/js/DataTables/ColReorder.js"></script>
<script type="text/javascript" src="/static/js/DataTables/ZeroClipboard.js"></script>
<script type="text/javascript" src="/static/js/DataTables/TableTools.js"></script>
<script type="text/javascript">

var algorithmId = ${algorithm_id};
var experimentId = ${experiment_id};
var patientId = ${request.GET.get('patient_id',0)};
var woundId = ${request.GET.get('wound_id',0)};
var measurementTable = new Object();
var segmentationTable = new Object();
var temperatureTable = new Object();

// This is the main JQuery page function that gets executed after the page is loaded and the
// the DOM elements are created.
$(function() {
	$('#tablecontainer1').hide();
	$('#tablecontainer2').hide();
	$('#tablecontainer3').hide();
	$('#patient-dropdown').change(
		function(event) {
			patientId = $(event.target).val();
			$('#patient-dropdown').spinner({img:'/static/images/spinner.gif'});
			$('#wound-dropdown').spinner({img:'/static/images/spinner.gif'});
			$('#wound-dropdown option').remove();
			// The next JQuery call populates the wound drop-down using AJAX
			$.getJSON('wound-dropdown',{patient_id : patientId},function(response,status,xhr) {
				var select = $('#wound-dropdown')[0];
				$.each(response, function(i,w) {
					var select = $('#wound-dropdown')[0];
					select.options[select.options.length] = new Option(w.wound_location_description,w.wound_id);
				});
				if (select.options.length == 0) {
					select.options[select.options.length] = new Option('No wounds for this patient','-');
				}
				$('#wound-dropdown').spinner('remove');
				woundId = $('#wound-dropdown option:first').val();
				populateTables(patientId,woundId);
			});
	});
	$('#wound-dropdown').change(
		function(event) {
			patientId = $('#patient-dropdown').val();
			woundId = $(event.target).val();
			// $('#wound-dropdown').spinner({img:'/static/images/spinner.gif'});
			populateTables(patientId,woundId);
	});
	if (patientId <= 0) {
		patientId = $('#patient-dropdown option:first').val();
	}
	$('#patient-dropdown').val(patientId);
	$('#patient-dropdown').trigger('change');
	$('#tabs').tabs({activate: 
		function( event, ui ) {
			if (ui.newTab.index() == 0) {
				$('#table_canvas1').dataTable().fnAdjustColumnSizing();
			} else if (ui.newTab.index() == 1) {
				$('#table_canvas2').dataTable().fnAdjustColumnSizing();
			} else {
				$('#table_canvas3').dataTable().fnAdjustColumnSizing();
			}
		}
	});
});

// The populateTables function makes the necessary AJAX calls to populate the data tables.
function populateTables(patientId,woundId) {
	// The next JQuery call populates the assessment measurements table.
	// This is done by making an AJAX call to the server using the URL /{application_name}/assessment-measurements
	// A MVC controller method is invoked and the response is returned in JSON format 
	measurementTable = [];
	$.getJSON('assessment-measurements',{patient_id : patientId, wound_id : woundId, experiment_id : experimentId},function(response,status,xhr) {
		if (status == 'success') {
			measurementTable = response;
			generateTable1();
			$('#tablecontainer1').show();
			$('#table_canvas1').dataTable().fnAdjustColumnSizing();
		}
	});
	// The next JQuery call populates the assessment segmentation table.
	// This is done by making an AJAX call to the server using the URL /{application_name}/assessment-segmentation
	// A MVC controller method is invoked and the response is returned in JSON format 
	segmentationTable = [];
	$.getJSON('assessment-segmentation',{patient_id : patientId, wound_id : woundId, experiment_id : experimentId},function(response,status,xhr) {
		if (status == 'success') {
			segmentationTable = response;
			generateTable2();
			$('#tablecontainer2').show();
			$('#table_canvas2').dataTable().fnAdjustColumnSizing();
		}
	});
	// The next JQuery call populates the assessment temperature table.
	// This is done by making an AJAX call to the server using the URL /{application_name}/assessment-temperatures
	// A MVC controller method is invoked and the response is returned in JSON format 
	temperatureTable = [];
	$.getJSON('assessment-temperatures',{patient_id : patientId, wound_id : woundId, experiment_id : experimentId},function(response,status,xhr) {
		if (status == 'success') {
			temperatureTable = response;
			generateTable3();
			$('#tablecontainer3').show();
			$('#table_canvas3').dataTable().fnAdjustColumnSizing();
			if (typeof $('#wound-dropdown').data('spinner') != 'undefined') {
				$('#wound-dropdown').spinner('remove');
			}
			if (typeof $('#patient-dropdown').data('spinner') != 'undefined') {
				$('#patient-dropdown').spinner('remove');
			}
		}
	});
}

// The generateTable function generates a new Datatable containing the query results
function generateTable1() {
	// Generate the table, specifying various options
	$('#table_canvas1').dataTable({
		"sDom" : 'R<"H"TCf>rt<"F"ip>',
		"aaData" : measurementTable,
		"aoColumns" : [{"sTitle" : "Assessment Date", "mData" : "start_time"},
				 	   {"sTitle" : "Length", "mData" : "length", "sType" : "numeric", "sClass" : "dtRight", "mRender": function (data,type,full) { return data.toFixed(2); } },
				 	   {"sTitle" : "Width", "mData" : "width", "sType" : "numeric", "sClass" : "dtRight", "mRender": function (data,type,full) { return data.toFixed(2); } },
				 	   {"sTitle" : "Depth", "mData" : "depth", "sType" : "numeric", "sClass" : "dtRight", "mRender": function (data,type,full) { return data.toFixed(2); } },
				 	   {"sTitle" : "Length*Width", "mData" : "length_x_width", "sType" : "numeric", "sClass" : "dtRight", "mRender": function (data,type,full) { return data.toFixed(2); } },
				 	   {"sTitle" : "Surface Area", "mData" : "surface_area", "sType" : "numeric", "sClass" : "dtRight", "mRender": function (data,type,full) { return data.toFixed(2); } },
				 	   {"sTitle" : "Wound Volume", "mData" : "wound_volume", "sType" : "numeric", "sClass" : "dtRight", "mRender": function (data,type,full) { return data.toFixed(2); } },
				 	   {"sTitle" : "Push Score", "mData" : "push_score", "sType" : "numeric", "sClass" : "dtRight", "mRender": function (data,type,full) { return data.toFixed(2); } }
					  ],
		"aaSorting": [],
		"bJQueryUI" : true,
		"bAutoWidth" : true,
		"bDeferRender" : true,
		"bScrollCollapse" : true,
		"sScrollX" : "100%",
		"sScrollY" : "100%",
		"bPaginate" : false,
		"bDestroy" : true,
		"bProcessing" : true,
		"oTableTools" : {
			"aButtons" : [ 
				{"sExtends" : "copy", "mColumns": "visible", "sButtonClass": "dt_button_class"},
				{"sExtends" : "csv",  "mColumns" : "visible", "sButtonClass": "dt_button_class"},
				{"sExtends" : "xls",  "mColumns" : "visible", "sButtonClass": "dt_button_class"},
				{"sExtends" : "pdf",  "mColumns" : "visible", "sPdfOrientation": "landscape", "sButtonClass": "dt_button_class"}
			],
			"sSwfPath" : "/static/swf/copy_csv_xls_pdf.swf"
		}
	});
}
	
// The generateTable function generates a new Datatable containing the query results
function generateTable2() {
	// Generate the table, specifying various options
	$('#table_canvas2').dataTable({
		"sDom" : 'R<"H"TCf>rt<"F"ip>',
		"aaData" : segmentationTable,
		"aoColumns" : [{"sTitle" : "Assessment Date", "mData" : "start_time"},
					   {"sTitle" : "Granulation %", "mData" : "granulation_percentage", "sType" : "numeric", "sClass" : "dtRight", "mRender": function (data,type,full) { return data.toFixed(2); } },
					   {"sTitle" : "Slough %", "mData" : "slough_percentage", "sType" : "numeric", "sClass" : "dtRight", "mRender": function (data,type,full) { return data.toFixed(2); } },
					   {"sTitle" : "Eschar %", "mData" : "eschar_percentage", "sType" : "numeric", "sClass" : "dtRight", "mRender": function (data,type,full) { return data.toFixed(2); } },
				 	   {"sTitle" : "Bone %", "mData" : "bone_percentage", "sType" : "numeric", "sClass" : "dtRight", "mRender": function (data,type,full) { return data.toFixed(2); } }
					  ],
		"aaSorting": [],
		"bJQueryUI" : true,
		"bAutoWidth" : true,
		"bDeferRender" : true,
		"bScrollCollapse" : true,
		"sScrollX" : "100%",
		"sScrollY" : "100%",
		"bPaginate" : false,
		"bDestroy" : true,
		"bProcessing" : true,
		"oTableTools" : {
			"aButtons" : [ 
				{"sExtends" : "copy", "mColumns": "visible", "sButtonClass": "dt_button_class"},
				{"sExtends" : "csv",  "mColumns" : "visible", "sButtonClass": "dt_button_class"},
				{"sExtends" : "xls",  "mColumns" : "visible", "sButtonClass": "dt_button_class"},
				{"sExtends" : "pdf",  "mColumns" : "visible", "sPdfOrientation": "landscape", "sButtonClass": "dt_button_class"}
			],
			"sSwfPath" : "/static/swf/copy_csv_xls_pdf.swf"
		}
	});
}
	
// The generateTable function generates a new Datatable containing the query results
function generateTable3() {
	// Generate the table, specifying various options
	$('#table_canvas3').dataTable({
		"sDom" : 'R<"H"TCf>rt<"F"ip>',
		"aaData" : temperatureTable,
		"aoColumns" : [{"sTitle" : "Assessment Date", "mData" : "start_time"},
				 	   {"sTitle" : "Max. Temp.", "mData" : "max_temperature", "sType" : "numeric", "sClass" : "dtRight", "mRender": function (data,type,full) { return data.toFixed(2); } },
				 	   {"sTitle" : "Min. Temp.", "mData" : "min_temperature", "sType" : "numeric", "sClass" : "dtRight", "mRender": function (data,type,full) { return data.toFixed(2); } },
				 	   {"sTitle" : "Mean Temp.", "mData" : "baseline_temperature", "sType" : "numeric", "sClass" : "dtRight", "mRender": function (data,type,full) { return data.toFixed(2); } },
				 	   {"sTitle" : "Sigma", "mData" : "temperature_variation_sigma", "sType" : "numeric", "sClass" : "dtRight", "mRender": function (data,type,full) { return data.toFixed(2); } },
				 	   {"sTitle" : "Segment 1 %", "mData" : "temperature_segment_1_percentage", "sType" : "numeric", "sClass" : "dtRight", "mRender": function (data,type,full) { return data.toFixed(2); } },
				 	   {"sTitle" : "Segment 2 %", "mData" : "temperature_segment_2_percentage", "sType" : "numeric", "sClass" : "dtRight", "mRender": function (data,type,full) { return data.toFixed(2); } },
				 	   {"sTitle" : "Segment 3 %", "mData" : "temperature_segment_3_percentage", "sType" : "numeric", "sClass" : "dtRight", "mRender": function (data,type,full) { return data.toFixed(2); } },
				 	   {"sTitle" : "Segment 4 %", "mData" : "temperature_segment_4_percentage", "sType" : "numeric", "sClass" : "dtRight", "mRender": function (data,type,full) { return data.toFixed(2); } },
				 	   {"sTitle" : "Segment 5 %", "mData" : "temperature_segment_5_percentage", "sType" : "numeric", "sClass" : "dtRight", "mRender": function (data,type,full) { return data.toFixed(2); } }
					  ],
		"aaSorting": [],
		"bJQueryUI" : true,
		"bAutoWidth" : true,
		"bDeferRender" : true,
		"bScrollCollapse" : true,
		"sScrollX" : "100%",
		"sScrollY" : "100%",
		"bPaginate" : false,
		"bDestroy" : true,
		"bProcessing" : true,
		"oTableTools" : {
			"aButtons" : [ 
				{"sExtends" : "copy", "mColumns": "visible", "sButtonClass": "dt_button_class"},
				{"sExtends" : "csv",  "mColumns" : "visible", "sButtonClass": "dt_button_class"},
				{"sExtends" : "xls",  "mColumns" : "visible", "sButtonClass": "dt_button_class"},
				{"sExtends" : "pdf",  "mColumns" : "visible", "sPdfOrientation": "landscape", "sButtonClass": "dt_button_class"}
			],
			"sSwfPath" : "/static/swf/copy_csv_xls_pdf.swf"
		}
	});
}
	
</script>
</head>
<body>

<!-- BACK GROUND WRAPPER EFFECTS -->   

<div id="bg-main">
<div id="bg-middle-effect"> 
<div id="site-wrapper">

<!-- Include logos -->
<span metal:use-macro="logo.macros['va-logo']" />
    
<!-- Include navigation bar -->
<span metal:use-macro="nav.macros['va-navigation']" />

<div id="content-main">
<div id="page-name-heading" class="table-name-heading">Wound Assessment Detail</div>
<div id="patient-select-div">
	<span id="patient-select-label">Patient:</span>
	<select id="patient-dropdown" name="patientSelect" class="ui-widget ui-widget-content">
		<option tal:repeat="p patients" value="${p.patient_id}">${p.patient_name} (${p.va_patient_id})</option>
	</select>
</div>
<div id="wound-select-div">
	<span id="wound-select-label">Wound:</span>
	<select id="wound-dropdown" name="woundSelect" class="ui-widget ui-widget-content">
	</select>
</div>
<div id="patient-div">
<div id="tabs" class="assessment-tabs">
	<ul>
		<li><a href="#tabs-measurements">Wound Measurements</a></li>
		<li><a href="#tabs-segmentation">Tissue Segmentation</a></li>
		<li><a href="#tabs-thermal">Thermal Profile</a></li>
	</ul>
	<div id="tabs-measurements">
<div id="table-name-heading1" class="table-name-heading">Wound Measurements</div>
<div id="tablecontainer1" class="tablecontainer">
<div id="tableviewport1" class="tableviewport">
<table cellpadding="0" cellspacing="0" border="0" class="display" id="table_canvas1"></table>
</div>
</div>
	</div>
	<div id="tabs-segmentation">
<div id="table-name-heading2" class="table-name-heading">Tissue Type Segmentation</div>
<div id="tablecontainer2" class="tablecontainer">
<div id="tableviewport2" class="tableviewport">
<table cellpadding="0" cellspacing="0" border="0" class="display" id="table_canvas2"></table>
</div>
</div>
	</div>
	<div id="tabs-thermal">
<div id="table-name-heading3" class="table-name-heading">Thermal Profile and Statistics</div>
<div id="tablecontainer3" class="tablecontainer">
<div id="tableviewport3" class="tableviewport">
<table cellpadding="0" cellspacing="0" border="0" class="display" id="table_canvas3"></table>
</div>
</div>
	</div>
</div>
</div><!-- patient-div -->
</div><!-- content-main -->

	           
    	</div><!-- End Site Wrapper -->
       
    </div><!-- End Middle Effect -->
    
  </div><!--End BG Main -->
<div style="position:relative; clear:both; height:1px; overflow:hidden"> </div>
            
<!-- Include footer -->
<span metal:use-macro="footer.macros['va-footer']" />

        
</body>
</html>